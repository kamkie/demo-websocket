plugins {
    id 'com.palantir.git-version' version '0.10.1'
    id "org.springframework.boot" version "2.0.0.RELEASE" apply false
    id "com.gorylenko.gradle-git-properties" version "1.4.21"
    id 'com.github.ben-manes.versions' version '0.17.0'
    id "org.jetbrains.kotlin.jvm" version "1.2.30" apply false
}

allprojects {
    group 'net.devopssolutions'
    version gitVersion()

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: "kotlin"
    apply plugin: 'pmd'
    apply plugin: 'findbugs'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencyManagement {
        imports {
            mavenBom("io.spring.platform:platform-bom:Brussels-SR7")
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compile "org.jetbrains.kotlin:kotlin-reflect"

        testCompile group: 'junit', name: 'junit'
    }
}

project(':ws-client') {
    apply plugin: 'org.springframework.boot'

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }

    dependencies {
        compile project(':ws-models')

        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-undertow")
        compile("org.springframework.boot:spring-boot-starter-websocket")
        compile("org.springframework.boot:spring-boot-actuator")
//        compile("org.springframework.boot:spring-boot-devtools")
        compile("org.springframework.boot:spring-boot-configuration-processor")
    }

    bootRun {
        systemProperty "spring.output.ansi.enabled", "always"
    }
}

project(':ws-server') {
    apply plugin: 'org.springframework.boot'

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }

    dependencies {
        compile project(':ws-models')

        compile("org.springframework.boot:spring-boot-starter-web")
//        compile("org.springframework.boot:spring-boot-starter-jetty")
        compile("org.springframework.boot:spring-boot-starter-undertow")
        compile("org.springframework.boot:spring-boot-starter-websocket")
        compile("org.springframework.boot:spring-boot-actuator")
//        compile("org.springframework.boot:spring-boot-devtools")
        compile("org.springframework.boot:spring-boot-configuration-processor")

//        compile group: 'org.xerial.snappy', name: 'snappy-java', version: '1.1.7.1'
        compile group: 'net.jpountz.lz4', name: 'lz4', version: '1.3'
        compile('de.ruedigermoeller:fst:2.57')
    }

    bootRun {
        systemProperty "spring.output.ansi.enabled", "always"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
    distributionType = org.gradle.api.tasks.wrapper.Wrapper.DistributionType.ALL
}
